# Generated by Django 3.1 on 2020-09-22 01:44

from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='TBusinessMain',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('busi_name', models.CharField(blank=True, max_length=255, verbose_name='业务流程名称')),
            ],
            options={
                'db_table': 'yt_002_business_main',
            },
        ),
        migrations.CreateModel(
            name='TEnvironment',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('env_name', models.CharField(blank=True, max_length=255, verbose_name='环境名称')),
                ('protocol', models.CharField(blank=True, choices=[('HTTP', 'Http'), ('HTTPS', 'Https')], default='HTTP', max_length=10, verbose_name='协议类型')),
                ('address', models.CharField(blank=True, max_length=255, verbose_name='IP地址端口/域名')),
                ('is_enable', models.IntegerField(blank=True, choices=[(0, 'No'), (1, 'Yes')], default=0, verbose_name='是否启用')),
                ('remark', models.CharField(blank=True, max_length=1000, null=True, verbose_name='备注')),
            ],
            options={
                'db_table': 'yt_001_project_environment',
            },
        ),
        migrations.CreateModel(
            name='TExecuteConfig',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('execute_name', models.CharField(blank=True, max_length=255, verbose_name='执行任务名称')),
                ('remark', models.CharField(blank=True, max_length=500, null=True, verbose_name='说明')),
            ],
            options={
                'db_table': 'yt_004_testsuite_execute_config',
            },
        ),
        migrations.CreateModel(
            name='TInterfaceCase',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('case_name', models.CharField(blank=True, max_length=255, verbose_name='实例名称')),
                ('case_description', models.CharField(blank=True, max_length=255, null=True, verbose_name='实例说明')),
                ('is_selected', models.IntegerField(blank=True, choices=[(0, 'No'), (1, 'Yes')], default=0, verbose_name='是否默认')),
                ('remark', models.CharField(blank=True, max_length=1000, null=True, verbose_name='备注')),
            ],
            options={
                'db_table': 'yt_002_interface_case',
            },
        ),
        migrations.CreateModel(
            name='TProject',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('project_code', models.CharField(blank=True, max_length=255, verbose_name='项目英文名')),
                ('project_name', models.CharField(blank=True, max_length=255, verbose_name='项目名称')),
                ('describe', models.CharField(blank=True, max_length=1000, null=True, verbose_name='项目说明')),
            ],
            options={
                'db_table': 'yt_001_project',
            },
        ),
        migrations.CreateModel(
            name='TTestCaseMain',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('number', models.CharField(blank=True, max_length=255, verbose_name='测试用例编号')),
                ('title', models.CharField(blank=True, max_length=255, verbose_name='测试用例标题')),
                ('mid', models.IntegerField(blank=True, null=True, verbose_name='归属模块ID')),
                ('bsid', models.IntegerField(blank=True, null=True, verbose_name='业务流程ID')),
                ('level', models.IntegerField(blank=True, choices=[(0, 'Level 0'), (1, 'Level 1'), (2, 'Level 2'), (3, 'Level 3')], null=True, verbose_name='优先级')),
                ('is_enable', models.IntegerField(blank=True, choices=[(0, 'No'), (1, 'Yes')], default=0, verbose_name='是否启用')),
                ('creator', models.CharField(blank=True, max_length=255, null=True, verbose_name='创建人')),
                ('create_time', models.DateTimeField(blank=True, null=True, verbose_name='创建时间')),
                ('update_time', models.DateTimeField(blank=True, null=True, verbose_name='更新时间')),
                ('remark', models.CharField(blank=True, max_length=1000, null=True, verbose_name='备注')),
            ],
            options={
                'db_table': 'yt_003_testcase_main',
            },
        ),
        migrations.CreateModel(
            name='TTestSuiteMain',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('suite_name', models.CharField(blank=True, max_length=255, verbose_name='测试集名称')),
                ('remark', models.CharField(blank=True, max_length=500, null=True, verbose_name='说明')),
            ],
            options={
                'db_table': 'yt_004_testsuite_main',
            },
        ),
        migrations.CreateModel(
            name='TTestSuiteTestCase',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('tc_list', models.TextField(blank=True, null=True, verbose_name='测试用例ID列表')),
                ('tsid', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='backend.ttestsuitemain')),
            ],
            options={
                'db_table': 'yt_004_testsuite_testcase',
            },
        ),
        migrations.CreateModel(
            name='TTestCaseStep',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('header', models.CharField(blank=True, max_length=2000, null=True, verbose_name='请求头')),
                ('body', models.TextField(blank=True, null=True, verbose_name='请求体')),
                ('step_no', models.IntegerField(blank=True, verbose_name='测试用例步骤')),
                ('inc_id', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='backend.tinterfacecase')),
                ('tc_id', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='backend.ttestcasemain')),
            ],
            options={
                'db_table': 'yt_003_testcase_step',
            },
        ),
        migrations.CreateModel(
            name='TTestCaseAssert',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('field_owner', models.CharField(blank=True, choices=[('res_header', 'Header'), ('res_body', 'Body')], max_length=50, verbose_name='字段归属')),
                ('field_name', models.CharField(blank=True, max_length=255, verbose_name='字段名')),
                ('field_node', models.CharField(blank=True, max_length=255, verbose_name='字段节点路径')),
                ('assert_type', models.CharField(blank=True, choices=[('contains', 'Contains'), ('equals', 'Equal')], max_length=10, null=True, verbose_name='断言类型')),
                ('field_value', models.CharField(blank=True, max_length=255, verbose_name='字段值')),
                ('sid', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='backend.ttestcasestep')),
            ],
            options={
                'db_table': 'yt_003_testcase_assert',
            },
        ),
        migrations.CreateModel(
            name='TProjectModule',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('module_name', models.CharField(blank=True, max_length=255, verbose_name='模块名称')),
                ('pid', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='backend.tproject')),
            ],
            options={
                'db_table': 'yt_001_project_module',
            },
        ),
        migrations.CreateModel(
            name='TInterfaceMain',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('interface_code', models.CharField(blank=True, max_length=255, verbose_name='接口编号')),
                ('interface_name', models.CharField(blank=True, max_length=255, verbose_name='接口名称')),
                ('interface_path', models.CharField(blank=True, max_length=255, verbose_name='接口地址')),
                ('method', models.CharField(blank=True, choices=[('GET', 'Get'), ('POST', 'Post'), ('HEAD', 'Head'), ('PUT', 'Put'), ('DELETE', 'Delete'), ('CONNECT', 'Connect'), ('OPTIONS', 'Options'), ('TRACE', 'Trace'), ('PATCH', 'Patch')], max_length=10, verbose_name='请求方式')),
                ('request_header', models.CharField(blank=True, max_length=2000, null=True, verbose_name='请求头样例')),
                ('request_body', models.TextField(blank=True, null=True, verbose_name='请求体样例')),
                ('response_header', models.CharField(blank=True, max_length=2000, null=True, verbose_name='响应头样例')),
                ('response_body', models.TextField(blank=True, null=True, verbose_name='响应体样例')),
                ('datatype', models.CharField(blank=True, choices=[('XML', 'Xml'), ('JSON', 'Json'), ('FORM', 'Form')], max_length=10, verbose_name='数据格式')),
                ('is_enable', models.IntegerField(blank=True, choices=[(0, 'No'), (1, 'Yes')], default=0, verbose_name='是否启用')),
                ('creator', models.CharField(blank=True, max_length=255, null=True, verbose_name='创建人')),
                ('create_time', models.DateTimeField(blank=True, null=True, verbose_name='创建时间')),
                ('update_time', models.DateTimeField(blank=True, null=True, verbose_name='更新时间')),
                ('remark', models.CharField(blank=True, max_length=1000, null=True, verbose_name='备注')),
                ('mid', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to='backend.tprojectmodule')),
                ('pid', models.ForeignKey(on_delete=django.db.models.deletion.SET_NULL, to='backend.tproject')),
            ],
            options={
                'db_table': 'yt_002_interface_main',
            },
        ),
        migrations.CreateModel(
            name='TInterfaceCaseFieldPool',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('field_owner', models.CharField(blank=True, choices=[('header', 'Header'), ('body', 'Body')], max_length=50, verbose_name='字段归属')),
                ('handle_type', models.CharField(blank=True, choices=[('get', 'Get'), ('set', 'Set')], max_length=50, verbose_name='操作类型')),
                ('field_name', models.CharField(blank=True, max_length=255, verbose_name='字段名称')),
                ('field_node', models.CharField(blank=True, max_length=255, verbose_name='字段节点路径')),
                ('pool_field', models.CharField(blank=True, max_length=255, null=True, verbose_name='Pool字段名称')),
                ('inc_id', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='backend.tinterfacecase')),
            ],
            options={
                'db_table': 'yt_002_interface_case_field_pool',
            },
        ),
        migrations.CreateModel(
            name='TInterfaceCaseFieldInitConfig',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('field_owner', models.CharField(blank=True, choices=[('header', 'Header'), ('body', 'Body')], max_length=50, verbose_name='字段归属')),
                ('field_name', models.CharField(blank=True, max_length=255, verbose_name='字段名称')),
                ('field_node', models.CharField(blank=True, max_length=255, verbose_name='字段节点路径')),
                ('field_value', models.CharField(blank=True, max_length=255, null=True, verbose_name='字段值')),
                ('inc_id', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='backend.tinterfacecase')),
            ],
            options={
                'db_table': 'yt_002_interface_case_field_init_config',
            },
        ),
        migrations.AddField(
            model_name='tinterfacecase',
            name='intf_id',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='backend.tinterfacemain'),
        ),
        migrations.CreateModel(
            name='TExecuteEnv',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('eid', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='backend.texecuteconfig')),
                ('env_id', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='backend.tenvironment')),
            ],
            options={
                'db_table': 'yt_004_testsuite_execute_env',
            },
        ),
        migrations.AddField(
            model_name='texecuteconfig',
            name='tsid',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='backend.ttestsuitemain'),
        ),
        migrations.AddField(
            model_name='tenvironment',
            name='pid',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='backend.tproject'),
        ),
        migrations.CreateModel(
            name='TBusinessStep',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('step_no', models.IntegerField(blank=True, verbose_name='业务流程步骤')),
                ('bsid', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='backend.tbusinessmain')),
                ('inc_id', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='backend.tinterfacecase')),
            ],
            options={
                'db_table': 'yt_002_business_step',
            },
        ),
        migrations.CreateModel(
            name='TAssertSceneFieldAssert',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('field_owner', models.CharField(blank=True, choices=[('res_header', 'Header'), ('res_body', 'Body')], max_length=50, verbose_name='字段归属')),
                ('field_name', models.CharField(blank=True, max_length=255, verbose_name='字段名')),
                ('field_node', models.CharField(blank=True, max_length=255, verbose_name='字段节点路径')),
                ('assert_type', models.CharField(blank=True, choices=[('contains', 'Contains'), ('equals', 'Equal')], max_length=10, null=True, verbose_name='断言类型')),
                ('field_value', models.CharField(blank=True, max_length=255, verbose_name='字段值')),
                ('inc_id', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='backend.tinterfacecase')),
            ],
            options={
                'db_table': 'yt_002_interface_case_field_assert',
            },
        ),
    ]
